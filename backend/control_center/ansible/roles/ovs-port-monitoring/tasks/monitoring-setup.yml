---
- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  with_items:
    - "/mnt/qos"
    - "/mnt/qos/{{ bridge_name }}"
    - "/mnt/qos/{{ bridge_name }}/venv"

- name: Install Python and pip
  ansible.builtin.package:
    name:
      - python3
      - python3-pip
      - python3-venv
    state: present

- name: Install virtualenv
  ansible.builtin.pip:
    name: virtualenv
    state: present

- name: Create a virtual environment
  ansible.builtin.command:
    cmd: python3 -m venv /mnt/qos/{{ bridge_name }}/venv
    creates: "/mnt/qos/{{ bridge_name }}/venv/bin/activate"

- name: Copy files to Server
  copy:
    src: "{{ playbook_dir }}/resources/ovs-switch-monitor/"
    dest: "/mnt/qos/{{ bridge_name }}"

- name: Create .env file with environment variables
  copy:
    dest: "/mnt/qos/{{ bridge_name }}/.env"
    content: |
      DEVICE_IP={{ ip_address }}
      OPENFLOW_VERSION={{ openflow_version }}
      API_URL={{ api_url }}
      BRIDGE={{ bridge_name }}
    mode: '0644'

- name: Install Python libraries
  ansible.builtin.pip:
    requirements: "/mnt/qos/{{ bridge_name }}/requirements.txt"
    virtualenv: "/mnt/qos/{{ bridge_name }}/venv"

- name: Create systemd service file for OVS Monitor
  copy:
    dest: "/etc/systemd/system/ovs-monitor-{{ bridge_name }}.service"
    content: |
        [Unit]
        Description=OVS QoS Monitoring Service for {{ bridge_name }}
        After=network.target
        
        [Service]
        User=root
        Group=root
        WorkingDirectory=/mnt/qos/{{ bridge_name }}
        EnvironmentFile=/mnt/qos/{{ bridge_name }}/.env
        ExecStart=/mnt/qos/{{ bridge_name }}/venv/bin/python /mnt/qos/{{ bridge_name }}/qos.py
        Restart=always
        RestartSec=5
        
        [Install]
        WantedBy=multi-user.target
    mode: '0644'

- name: Reload systemd to pick up new service file
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start OVS Monitor service
  ansible.builtin.systemd:
    name: "ovs-monitor-{{ bridge_name }}"
    enabled: yes
    state: started