# Generated by Django 5.0.1 on 2025-05-13 20:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('general', '0029_bridge_odl_node_id'),
        ('network_device', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OdlMeter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meter_id_on_odl', models.CharField(help_text="The numeric ID of the meter on OpenDaylight (e.g., '1', '22').", max_length=50)),
                ('meter_type', models.CharField(choices=[('drop', 'drop')], default='drop', max_length=30)),
                ('rate', models.IntegerField(help_text="Rate in Kbps for 'drop' type")),
                ('switch_node_id', models.CharField(help_text="OpenDaylight Node ID of the switch (e.g., 'openflow:123...').", max_length=255)),
                ('odl_flags', models.CharField(blank=True, help_text='Flags from ODL meter config (e.g., meter-kbps).', max_length=100)),
                ('activation_period', models.CharField(choices=[('weekday', 'Weekday'), ('weekend', 'Weekend'), ('all_week', 'All Week')], default='all_week', max_length=10)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='odl_meters', to='odl.category')),
                ('controller_device', models.ForeignKey(help_text='The OpenDaylight controller device managing this meter.', limit_choices_to={'device_type': 'controller'}, on_delete=django.db.models.deletion.CASCADE, related_name='odl_meters', to='general.device')),
                ('network_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='odl_network_device_meters', to='network_device.networkdevice')),
            ],
            options={
                'verbose_name': 'OpenDaylight Meter',
                'verbose_name_plural': 'OpenDaylight Meters',
                'indexes': [models.Index(fields=['controller_device', 'switch_node_id'], name='odl_odlmete_control_1e0474_idx')],
                'unique_together': {('controller_device', 'switch_node_id', 'meter_id_on_odl')},
            },
        ),
    ]
